import esbuild from "esbuild";
import process from "process";
import builtins from "builtin-modules";
import vue from "@the_tree/esbuild-plugin-vue3";
import { time } from "console";

const t = time("build-time");
const banner = `/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const prod = process.argv[2] === "production";

const ctx = await esbuild.context({
    banner: {
        js: banner,
    },
    define: {
        __IS_DEV__: String(!prod),
        // "__IS_DEV__": !prod,
    },
    plugins: [vue({ isProd: true })],
    entryPoints: ["main.ts"],
    bundle: true,
    external: [
        "obsidian",
        "electron",
        "@codemirror/autocomplete",
        "@codemirror/closebrackets",
        "@codemirror/collab",
        "@codemirror/commands",
        "@codemirror/comment",
        "@codemirror/fold",
        "@codemirror/gutter",
        "@codemirror/highlight",
        "@codemirror/history",
        "@codemirror/language",
        "@codemirror/lint",
        "@codemirror/matchbrackets",
        "@codemirror/panel",
        "@codemirror/rangeset",
        "@codemirror/rectangular-selection",
        "@codemirror/search",
        "@codemirror/state",
        "@codemirror/stream-parser",
        "@codemirror/text",
        "@codemirror/tooltip",
        "@codemirror/view",
        ...builtins,
    ],
    format: "cjs",
    // watch: !prod,
    target: "es2022",
    logLevel: "info",
    sourcemap: prod ? false : "inline",
    minify: prod,
    treeShaking: true,
    outfile: "main.js",
});

const styleCtx = await esbuild.context({
    entryPoints: ["./src/main.css"],
    outfile: "styles.css",
    // watch: !prod,
    bundle: true,
    allowOverwrite: true,
    minify: false,
});

if (!prod) {
    ctx.watch().catch((e) => {
        console.log(e);
        process.exit(1);
    });
    styleCtx.watch();
} else {
    await ctx.rebuild();
    await styleCtx.rebuild();
    console.timeEnd("build-time");
    process.exit(0);
}
